name: Build and run Cypress tests

# Controls when the workflow will run
on:
  # Allows the workflow to be called from another workflow
  workflow_call:
    inputs:
      browser:
        description: 'Browser to run the tests on'
        type: string
        required: true
        default: electron
      viewport-width:
        description: 'Width of the viewport to test'
        type: string
        required: true
        default: 1000
      viewport-height:
        description: 'Width of the viewport to test'
        type: string
        required: true
        default: 660
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      browser:
        description: 'Browser to run the tests on'
        type: choice
        options:
          - electron
          - chrome
          - firefox
          # Optional: add beta builds
        required: true
        default: electron
      viewport-width:
        description: 'Width of the viewport to test'
        type: string
        required: true
        default: '1000'
      viewport-height:
        description: 'Width of the viewport to test'
        type: string
        required: true
        default: '660'
  repository_dispatch:
    types: cypress-test
  pull_request:
    branches: [ main ]

jobs:
  cypress-tests:
    name: Cypress Tests
    runs-on: ubuntu-latest
    steps:
      # Checkout git branch
      - name: Checkout
        uses: actions/checkout@v3

      # Automatic setup of Ruby environment and dependencies
      - name: Perform Ruby Setup
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7
          bundler-cache: true

      - name: Setup Run Parameters
        id: param
        run: |
          if ${{ github.event_name }} == "repository_dispatch"; then
            echo "::set-output browser=${{ github.event.client_payload.browser }}"
            echo "::set-output viewport_width=${{ github.event.client_payload.viewport_width }}"  
            echo "::set-output viewport_height=${{ github.event.client_payload.viewport_height }}"  
          elif ${{ github.event_name }} == "pull_request"; then
            echo "::set-output browser=electron"
            echo "::set-output viewport_width=1000"  
            echo "::set-output viewport_height=660"  
          else 
            echo "::set-output browser=${{ github.event.input.browser }}"
            echo "::set-output viewport_width=${{ github.event.input.viewport_width }}"  
            echo "::set-output viewport_height=${{ github.event.input.viewport_height }}"  
          fi
        # There has to be a more elegant way, but passing objects directly doesn't seem to be possible, and I'm not sure if I understood the rest

      # Automatic installation of node, modules, building and serving site
      - name: Run Cypress Tests
        uses: cypress-io/github-action@v2
        with:
          start: bundle exec jekyll serve --no-watch # No changes should happen -> no need to watch
          wait-on: 'http://localhost:4000' # Ensure server comes up before tests start, in case build takes longer
          browser: ${{ steps.param.outputs.cy_browser }}
          # Environment variables for matrix testing, such as viewport size etc.
          env: CYPRESS_VIEWPORT_WIDTH=${{ steps.param.outputs.viewport-width }},CYPRESS_VIEWPORT_HEIGHT=${{ steps.param.outputs.viewport_height-width }}
          # This is probably redundant - If I can't pass entire objects, I could also set the environment variables directly.